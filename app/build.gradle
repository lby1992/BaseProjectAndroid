apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'
apply from: "$project.rootDir/tools/quality/quality.gradle"

android {
    compileSdkVersion COMPILE_SDK_VERSION as int
    buildToolsVersion BUILD_TOOLS_VERSION
    defaultConfig {
        applicationId "com.dennis.baseprojectandroid"
        minSdkVersion MIN_SDK_VERSION as int
        targetSdkVersion TARGET_SDK_VERSION as int
        //use git version variable instead
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation" : "$projectDir/schemas".toString()]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }
    dataBinding {
        enabled = true
    }
}

dependencies {
    final DAGGER_VERSION = '2.14.1'
    final ROOM_VERSION = '1.1.0-beta2'
    final DATA_BINDING_VERSION = '3.0.1'
    final RX_JAVA_VERSION = '2.1.11'
    final RX_ANDROID_VERSION = '2.0.2'
    final JUNIT_VERSION = '4.12'
    final MOCKITO_VERSION = '2.17.0'
    final FABRIC_VERSION = '2.9.1'

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation "com.android.support:appcompat-v7:$SUPPORT_LIB_VERSION"
    implementation "com.android.support:support-v4:$SUPPORT_LIB_VERSION"
    testImplementation "junit:junit:$JUNIT_VERSION"
    testImplementation "org.mockito:mockito-core:$MOCKITO_VERSION"

    // Dagger 2 for dependency injection
    implementation "com.google.dagger:dagger:$DAGGER_VERSION"
    implementation "com.google.dagger:dagger-android-support:$DAGGER_VERSION" // if you use the support libraries
    kapt "com.google.dagger:dagger-compiler:$DAGGER_VERSION"

    // Room
    implementation "android.arch.persistence.room:runtime:$ROOM_VERSION"
    kapt "android.arch.persistence.room:compiler:$ROOM_VERSION"
    // Test helpers for Room
    androidTestImplementation "android.arch.persistence.room:testing:$ROOM_VERSION"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$KOTLIN_VERSION"

    implementation "io.reactivex.rxjava2:rxjava:$RX_JAVA_VERSION"
    testImplementation "io.reactivex.rxjava2:rxjava:$RX_JAVA_VERSION"
    implementation "io.reactivex.rxjava2:rxandroid:$RX_ANDROID_VERSION"

    implementation("com.crashlytics.sdk.android:crashlytics:$FABRIC_VERSION@aar") {
        transitive = true
    }
}
repositories {
    mavenCentral()
}
